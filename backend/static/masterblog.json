{
  "swagger": "2.0",
  "info": {
    "title": "Masterblog API",
    "version": "1.0.0",
    "description": "API for managing blog posts with CRUD, search, sorting, pagination, and authentication"
  },
  "servers": [
    { "url": "http://localhost:5002/api/v1" }
  ],
  "tags": [
    { "name": "Post", "description": "Operations for managing blog posts" },
    { "name": "User", "description": "User authentication and registration" }
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter JWT token as 'Bearer <token>'"
    }
  },
  "paths": {
    "/posts": {
      "get": {
        "summary": "Get a paginated list of blog posts",
        "tags": ["Post"],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "enum": ["title", "content", "category", "author", "date"],
            "description": "Field to sort by (optional)"
          },
          {
            "name": "direction",
            "in": "query",
            "type": "string",
            "enum": ["asc", "desc"],
            "default": "asc",
            "description": "Sort direction (optional)"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "default": 1,
            "description": "Page number (optional)"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "default": 10,
            "description": "Posts per page (optional)"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Post"
                  }
                },
                "total": { "type": "integer" },
                "page": { "type": "integer" },
                "per_page": { "type": "integer" }
              }
            }
          },
          "400": {
            "description": "Invalid sort field, direction, or pagination parameters",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      },
      "post": {
        "summary": "Create a new blog post",
        "tags": ["Post"],
        "security": [{ "Bearer": [] }],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["title", "content"],
              "properties": {
                "title": { "type": "string" },
                "content": { "type": "string" },
                "author": { "type": "string" },
                "date": { "type": "string", "format": "date" },
                "category": { "type": "string" },
                "tags": { "type": "array", "items": { "type": "string" } }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post created successfully",
            "schema": { "$ref": "#/definitions/Post" }
          },
          "400": {
            "description": "Invalid input or missing required fields",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "401": {
            "description": "Unauthorized",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/posts/{post_id}": {
      "delete": {
        "summary": "Delete a blog post by ID",
        "tags": ["Post"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the post to delete"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Post deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "404": {
            "description": "Post not found",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      },
      "put": {
        "summary": "Update a blog post by ID",
        "tags": ["Post"],
        "security": [{ "Bearer": [] }],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the post to update"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "title": { "type": "string" },
                "content": { "type": "string" },
                "author": { "type": "string" },
                "date": { "type": "string", "format": "date" },
                "category": { "type": "string" },
                "tags": { "type": "array", "items": { "type": "string" } }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post updated successfully",
            "schema": { "$ref": "#/definitions/Post" }
          },
          "400": {
            "description": "Invalid input",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "401": {
            "description": "Unauthorized",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "404": {
            "description": "Post not found",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/posts/search": {
      "get": {
        "summary": "Search posts by title, content, author, date, category, or tags",
        "tags": ["Post"],
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "type": "string",
            "description": "Search term for post title (optional)"
          },
          {
            "name": "content",
            "in": "query",
            "type": "string",
            "description": "Search term for post content (optional)"
          },
          {
            "name": "author",
            "in": "query",
            "type": "string",
            "description": "Search term for post author (optional)"
          },
          {
            "name": "date",
            "in": "query",
            "type": "string",
            "format": "date",
            "description": "Search term for post date (YYYY-MM-DD, optional)"
          },
          {
            "name": "category",
            "in": "query",
            "type": "string",
            "description": "Search term for post category (optional)"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string",
            "description": "Comma-separated tags to search for (optional)"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "default": 1,
            "description": "Page number (optional)"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "default": 10,
            "description": "Posts per page (optional)"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Post"
                  }
                },
                "total": { "type": "integer" },
                "page": { "type": "integer" },
                "per_page": { "type": "integer" }
              }
            }
          },
          "400": {
            "description": "Invalid pagination parameters",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/posts/{post_id}/comments": {
      "post": {
        "summary": "Add a comment to a blog post",
        "tags": ["Post"],
        "security": [{ "Bearer": [] }],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the post to comment on"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["text"],
              "properties": {
                "text": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Comment added successfully",
            "schema": { "$ref": "#/definitions/Comment" }
          },
          "400": {
            "description": "Invalid input or missing text",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "401": {
            "description": "Unauthorized",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "404": {
            "description": "Post not found",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["User"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["username", "password"],
              "properties": {
                "username": { "type": "string" },
                "password": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" }
              }
            }
          },
          "400": {
            "description": "Invalid input or username exists",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Log in a user and return a JWT token",
        "tags": ["User"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["username", "password"],
              "properties": {
                "username": { "type": "string" },
                "password": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": { "type": "string" }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    }
  },
  "definitions": {
    "Post": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "title": { "type": "string" },
        "content": { "type": "string" },
        "author": { "type": "string" },
        "date": { "type": "string", "format": "date" },
        "category": { "type": "string" },
        "tags": { "type": "array", "items": { "type": "string" } },
        "comments": {
          "type": "array",
          "items": { "$ref": "#/definitions/Comment" }
        }
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "text": { "type": "string" },
        "author": { "type": "string" }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "error": { "type": "string" }
      }
    }
  }
}